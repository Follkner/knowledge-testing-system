{  
   "data":[  
      {  
         "id":1,
         "title":"JavaScript: closure",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            },
            {  
               "question":"Closure allows",
               "answers":[  
                  "create new variables",
                  "call outer functions",
                  "have access to external variables",
                  "call any functions in this file"
               ],
               "type":"checkbox"
            },
            {  
               "question":"In JavaScript, every running function, code block, and the script as a whole have an associated object known as the ...",
               "answers":[  
                  "Code Environment",
                  "Closure Environment",
                  "JavaScript Environment",
                  "Lexical Environment"
               ],
               "type":"radio"
            },
            {  
               "question":"JavaScript is ...",
               "answers":[  
                  "dynamic programming language",
                  "class-based programming",
                  "prototype-based programming",
                  "object-oriented programming"
               ],
               "type":"checkbox"
            },
            {  
               "question":"Which operator of these performs not only mathematical operations?",
               "answers":[  
                  "*",
                  "+",
                  "-",
                  "/",
                  ">>>"
               ],
               "type":"radio"
            },
            {  
               "question":"Lexical Environment is a ...",
               "answers":[  
                  "array",
                  "number",
                  "special symbol",
                  "specification object"
               ],
               "type":"radio"
            }
         ]
      },

      {  
         "id":2,
         "title":"Inheritance in prototypal languages",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            },
            {  
               "question":"Closure allows",
               "answers":[  
                  "create new variables",
                  "call outer functions",
                  "have access to external variables",
                  "call any functions in this file"
               ],
               "type":"checkbox"
            }
         ]
      },
      {  
         "id":3,
         "title":"English grammar A2",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            }
         ]
      },

      {  
         "id":4,
         "title":"English grammar B1",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            }
         ]
      },
      {  
         "id":5,
         "title":"English grammar B2",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            },
            {  
               "question":"Closure allows",
               "answers":[  
                  "create new variables",
                  "call outer functions",
                  "have access to external variables",
                  "call any functions in this file"
               ],
               "type":"checkbox"
            }
         ]
      },

        {  
         "id":6,
         "title":"React core",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            },
            {  
               "question":"Closure allows",
               "answers":[  
                  "create new variables",
                  "call outer functions",
                  "have access to external variables",
                  "call any functions in this file"
               ],
               "type":"checkbox"
            }
         ]
      },
      {  
         "id":7,
         "title":"React advanced",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            }
         ]
      },

      {  
         "id":8,
         "title":"Angular core",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            },
            {  
               "question":"Closure allows",
               "answers":[  
                  "create new variables",
                  "call outer functions",
                  "have access to external variables",
                  "call any functions in this file"
               ],
               "type":"checkbox"
            },
            {  
               "question":"In JavaScript, every running function, code block, and the script as a whole have an associated object known as the ...",
               "answers":[  
                  "Code Environment",
                  "Closure Environment",
                  "JavaScript Environment",
                  "Lexical Environment"
               ],
               "type":"radio"
            }
         ]
      },
      {  
         "id":9,
         "title":"Angular advanced",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            },
            {  
               "question":"Closure allows",
               "answers":[  
                  "create new variables",
                  "call outer functions",
                  "have access to external variables",
                  "call any functions in this file"
               ],
               "type":"checkbox"
            },
            {  
               "question":"In JavaScript, every running function, code block, and the script as a whole have an associated object known as the ...",
               "answers":[  
                  "Code Environment",
                  "Closure Environment",
                  "JavaScript Environment",
                  "Lexical Environment"
               ],
               "type":"radio"
            },
            {  
               "question":"JavaScript is ...",
               "answers":[  
                  "dynamic programming language",
                  "class-based programming",
                  "prototype-based programming",
                  "object-oriented programming"
               ],
               "type":"checkbox"
            },
            {  
               "question":"Which operator of these performs not only mathematical operations?",
               "answers":[  
                  "*",
                  "+",
                  "-",
                  "/",
                  ">>>"
               ],
               "type":"radio"
            },
            {  
               "question":"Lexical Environment is a ...",
               "answers":[  
                  "array",
                  "number",
                  "special symbol",
                  "specification object"
               ],
               "type":"radio"
            },
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            },
            {  
               "question":"Closure allows",
               "answers":[  
                  "create new variables",
                  "call outer functions",
                  "have access to external variables",
                  "call any functions in this file"
               ],
               "type":"checkbox"
            },
            {  
               "question":"In JavaScript, every running function, code block, and the script as a whole have an associated object known as the ...",
               "answers":[  
                  "Code Environment",
                  "Closure Environment",
                  "JavaScript Environment",
                  "Lexical Environment"
               ],
               "type":"radio"
            }
         ]
      },
      {  
         "id":10,
         "title":"OOP. Main concepts",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            },
            {  
               "question":"Closure allows",
               "answers":[  
                  "create new variables",
                  "call outer functions",
                  "have access to external variables",
                  "call any functions in this file"
               ],
               "type":"checkbox"
            },
            {  
               "question":"In JavaScript, every running function, code block, and the script as a whole have an associated object known as the ...",
               "answers":[  
                  "Code Environment",
                  "Closure Environment",
                  "JavaScript Environment",
                  "Lexical Environment"
               ],
               "type":"radio"
            }
         ]
      },
      {  
         "id":11,
         "title":"JavaScript as prototypal language",
         "tests":[  
            {  
               "question":"The closure has three scope chains:",
               "answers":[  
                  "it has access to its own scope — variables defined between its curly brackets",
                  "it has access to the outer function’s variables",
                  "it has access to the global variables",
                  "it has access to the variables in other functions"
               ],
               "type":"checkbox"
            },
            {  
               "question":"The inner function can access the variables of the enclosing function due to closures in JavaScript.",
               "answers":[  
                  "true",
                  "false"
               ],
               "type":"radio"
            },
            {  
               "question":"The default environment where your code is executed for the first time is a...",
               "answers":[  
                  "context code",
                  "function code",
                  "global code",
                  "closure"
               ],
               "type":"radio"
            },
            {  
               "question":"Closure allows",
               "answers":[  
                  "create new variables",
                  "call outer functions",
                  "have access to external variables",
                  "call any functions in this file"
               ],
               "type":"checkbox"
            },
            {  
               "question":"In JavaScript, every running function, code block, and the script as a whole have an associated object known as the ...",
               "answers":[  
                  "Code Environment",
                  "Closure Environment",
                  "JavaScript Environment",
                  "Lexical Environment"
               ],
               "type":"radio"
            }
         ]
      }                    
   ],
   "answers":[
      {
         "id":1,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"],
            ["call outer functions", "have access to external variables"],
            ["Lexical Environment"],
            ["dynamic programming language",
               "prototype-based programming",
               "object-oriented programming"],
            ["+"],
            ["specification object"]
         ]
      },
      {
         "id":2,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"],
            ["call outer functions", "have access to external variables"]
         ]
      },
      {
         "id":3,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"]
         ]
      },
      {
         "id":4,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"]
         ]
      },
      {
         "id":5,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"],
            ["call outer functions", "have access to external variables"]
         ]
      },
      {
         "id":6,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"],
            ["call outer functions", "have access to external variables"]
         ]
      },
      {
         "id":7,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"]
         ]
      },
      {
         "id":8,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"],
            ["call outer functions", "have access to external variables"],
            ["Lexical Environment"]
         ]
      },
      {
         "id":9,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"],
            ["call outer functions", "have access to external variables"],
            ["Lexical Environment"],
            ["dynamic programming language",
               "prototype-based programming",
               "object-oriented programming"],
            ["+"],
            ["specification object"],
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"],
            ["call outer functions", "have access to external variables"],
            ["Lexical Environment"]
         ]
      },
      {
         "id":10,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"],
            ["call outer functions", "have access to external variables"],
            ["Lexical Environment"]
         ]
      },
      {
         "id":11,
         "answers": [
            ["it has access to its own scope — variables defined between its curly brackets",
               "it has access to the outer function’s variables",
               "it has access to the global variables"],
            ["true"],
            ["global code"],
            ["call outer functions", "have access to external variables"],
            ["Lexical Environment"]
         ]
      }
   ]
}